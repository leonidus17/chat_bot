import logging
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters
from random import randint
import requests
from aiogram.types import ReplyKeyboardRemove, \
    KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton

word = ['—Å–ª–æ–≤–æ', '–∫—Ä—ã—à–∞', '—á–∞—à–∫–∞', '–¥–æ—Å–∫–∞', '—á–µ—Ö–æ–ª', '–º—ã—à–∫–∞', '—Ç—Ä—É–±–∞', '–¥–∑—é–¥–æ', '–±–∞–π–∫–∞', '–Ω–µ—Ñ—Ç—å', '–º–∞–∑—É—Ç', '—Å—ã—Ä—å—ë',
        '—à–∞—Ö—Ç–∞', '—É–≥–æ–ª—å', '—Ö–∏–º–∏—è', '–∫–∞–ø–ª—è', '–º–∞—Å–ª–æ', '–¥—É–±–∞–π', '–±—É—Ç–∞–Ω', '–∞–∫—Ü–∏–∑', '–±–∏—Ç—É–º', '–±—É—Ä–∞–≤', '–¥–µ–±–∏—Ç', '—Ä—ã–Ω–æ–∫',
        '—Å–≤—è–∑—å', '—Ä—É–±–ª—å', '–Ω–∞—É–∫–∞', '–æ–±—ä—ë–º', '—Ñ–∏—Ä–º–∞', '–∑–∞–≤–æ–¥', '—É—Å–ø–µ—Ö', '—Å—Ñ–µ—Ä–∞', '—Ç–æ–≤–∞—Ä', '–ø–æ–∏—Å–∫', '–Ω–∞–ª–æ–≥', '–¥–æ—Ö–æ–¥',
        '—Ç—Ä—É–±–∞', '—Å–ø–æ—Ä—Ç', '–ø–æ—á–≤–∞', '–º–∞—Ä–∫–∞', '–æ–±–º–µ–Ω', '—Å–ø—Ä–æ—Å', '—Å–º–µ—Å—å', '—Å–æ—Å—É–¥', '–ø—Ä–æ–±–∞', '–Ω–∞—Å–æ—Å', '—Ñ–∞–∫–µ–ª', '–æ–±–º–µ–Ω',
        '–∑–µ–º–ª—è', '–±–∏—Ä–∂–∞', '–∏—Å—Ç–æ–∫', '–Ω–∞–ø–æ—Ä', '–±–∞–ª–∫–∞', '–∫–∞—Å–∫–∞', '–±–∞—Ä–∂–∞', '–∫–∏—Ç–∞–π', '–ª–∏–≤–∏—è', '–±—Ä–µ–Ω–¥', '–ª–∏—Ü–µ–π', '–æ—Ö–≤–∞—Ç','–Ω–æ—Ä–º–∞']



def preob(a: list):
    s = ''
    for i in range(len(a)):
        s += a[i]
        s += ' '
    return s


def convert_tuple(c_tuple):
    str = ''
    for i in c_tuple:
        str = str + i
    return str


logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

main_dict = {}

button1 = '/start_game'
help_button = '/help'
stickers_button = '/get_stickers'
main_kb = ReplyKeyboardMarkup([[button1, help_button, stickers_button]], resize_keyboard=True)

stop_button = '/stop'
stop_kb = ReplyKeyboardMarkup([[stop_button]], resize_keyboard=True)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await context.bot.send_message(chat_id=update.effective_chat.id, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É '5 –±—É–∫–≤'!\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É /start_game\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∏–≥—Ä–µ, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å /help\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∏–∫–µ—Ä—ã, –Ω–∞–∂–º–∏—Ç–µ /get_stickers",
                                   reply_markup=main_kb)
    main_dict[update.effective_chat.id] = {'have_stickers': False, 'last_command': '/start',
                                           'game': {'attempt_count': 0, 'otvet': ['*', '*', '*', '*', '*'],
                                                    'guess_word': ' ', 'game_in_progress': False}}



async def start_game(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_chat.id not in main_dict:
        main_dict[update.effective_chat.id] = {'have_stickers': False, 'last_command': '/start_game',
                                               'game': {'attempt_count': 0, 'otvet': ['*', '*', '*', '*', '*'],
                                                        'guess_word': ' ',
                                                        'game_in_progress': True}}
    main_dict[update.effective_chat.id]['game']['otvet'] = ['*', '*', '*', '*', '*']
    if main_dict[update.effective_chat.id]['game']['attempt_count'] > 0:
        await context.bot.send_message(chat_id=update.effective_chat.id,
                                       text="–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –Ω–∞—á–∞—Ç–∞—è —Å–µ—Å—Å–∏—è\n –ù–∞–ø–∏—à–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª–∏–Ω–æ–π 5 –±—É–∫–≤–æ–π")
    else:
        await context.bot.send_message(chat_id=update.effective_chat.id,
                                       text="–•–æ—Ä–æ—à–æ, —á—Ç–æ –≤—ã —Ä–µ—à–∏–ª–∏ –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –Ω–∞—à—É –∏–≥—Ä—É! –í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª–∏–Ω–æ–π 5 –±—É–∫–≤",reply_markup=stop_kb)

    main_dict[update.effective_chat.id]['last_command'] = '/start_game'
    main_dict[update.effective_chat.id]['game']['game_in_progress'] = True
    main_dict[update.effective_chat.id]['game']['attempt_count'] += 1
    main_dict[update.effective_chat.id]['game']['guess_word'] = word[randint(0, len(word) - 1)]
    main_dict[update.effective_chat.id]['game']['attempt_count'] = 0



async def igra(update: Update, context: ContextTypes.DEFAULT_TYPE):

    if update.effective_chat.id not in main_dict:
        main_dict[update.effective_chat.id] = {'have_stickers': False, 'last_command': '/start_game',
                                               'game': {'attempt_count': 0, 'otvet': ['*', '*', '*', '*', '*'],
                                                        'guess_word': ' ',
                                                        'game_in_progress': False}}

    if main_dict[update.effective_chat.id]['game']['game_in_progress']:
        text_fin = ''
        dogadka = ''
        text_result = ''
        dogadka = update.message.text
        dogadka = dogadka.lower()

        a = requests.get(
            f"https://dictionary.yandex.net/api/v1/dicservice.json/lookup?key=dict.1.1.20240609T074810Z"
            f".1e88860b7b677d28.596c4c409f867db83c96cbd6973ffccf2db4e4f7&lang=ru-ru&text={dogadka}")
        b = a.json()

        if len(dogadka) == 5 and b['def'] != []:
            main_dict[update.effective_chat.id]['game']['attempt_count'] += 1
            otvet_proverka = dogadka
            dogadka = list(dogadka)
            for i in range(len(dogadka)):
                if dogadka[i] in main_dict[update.effective_chat.id]['game']['guess_word']:
                    if dogadka[i] == main_dict[update.effective_chat.id]['game']['guess_word'][i]:
                        dogadka[i] = f'<b><u>{dogadka[i].upper()}</u></b>'
                    else:
                        dogadka[i] = f'<b>{dogadka[i].upper()}</b>'
            if otvet_proverka == main_dict[update.effective_chat.id]['game']['guess_word']:
                text_result = '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º. –í—ã –ø—Ä–æ—à–ª–∏ –∏–≥—Ä—É!!üòé\n–í–æ—Ç —Å—Ç–æ–ª—å–∫–æ –ø–æ–ø—ã—Ç–æ–∫ —É –≤–∞—Å —É—à–ª–æ –Ω–∞ —ç—Ç–æ: ' + \
                              str(main_dict[update.effective_chat.id]['game']['attempt_count'])
                await context.bot.send_message(chat_id=update.effective_chat.id,
                                               text=preob(dogadka) + '\n' + text_result, parse_mode="HTML",
                                               reply_markup=main_kb)
                main_dict[update.effective_chat.id]['game']['game_in_progress'] = False
                main_dict[update.effective_chat.id]['game']['attempt_count'] = 0
            elif main_dict[update.effective_chat.id]['game']['attempt_count'] == 6:
                await context.bot.send_message(chat_id=update.effective_chat.id,
                                               text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏üò¢\n–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –±—ã–ª–æ: ' +
                                                    main_dict[update.effective_chat.id]['game'][
                                                        'guess_word'] + '\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑', reply_markup = main_kb)
                main_dict[update.effective_chat.id]['game']['game_in_progress'] = False
                main_dict[update.effective_chat.id]['game']['attempt_count'] = 0
                return
            else:
                text_result = '–í–≤–µ–¥–∏—Ç–µ –µ—â—ë –æ–¥–Ω–æ —Å–ª–æ–≤–æ –¥–ª–∏–Ω–æ–π 5 –±—É–∫–≤.\n–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å —Å—Ç–æ–ª—å–∫–æ –ø–æ–ø—ã—Ç–æ–∫ —á—Ç–æ–±—ã –æ—Ç–≥–∞–¥–∞—Ç—å ' \
                              '—Å–ª–æ–≤–æ: ' + str(6 - main_dict[update.effective_chat.id]['game']['attempt_count'])
                await context.bot.send_message(chat_id=update.effective_chat.id,
                                               text=preob(dogadka) + '\n' + text_result, parse_mode="HTML", reply_markup = main_kb)





        else:
            await context.bot.send_message(chat_id=update.effective_chat.id,
                                           text='–í—ã –≤–≤–µ–ª–∏ —Å–ª–æ–≤–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã –∏–ª–∏ —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')


    else:
        await context.bot.send_message(chat_id=update.effective_chat.id,
                                       text='–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É, –Ω–∞–ø–∏—à–∏—Ç–µ /start_game')


async def help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await context.bot.send_message(chat_id=update.effective_chat.id,
                                   text='–°—É—Ç—å –∏–≥—Ä—ã —Ç–∞–∫–æ–≤–∞: –∫–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç —Å–ª–æ–≤–æ –¥–ª–∏–Ω–æ–π 5 –±—É–∫–≤, –∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –≤–≤–æ–¥–∏—Ç—å —Å–ª–æ–≤–∞ —Ç–∞–∫–æ–π –∂–µ –¥–ª–∏–Ω—ã, —á—Ç–æ–±—ã –∫–æ–º–ø—å—é—Ç–µ—Ä —Å–∫–∞–∑–∞–ª –≤–∞–º, –∫–∞–∫–∏–µ –±—É–∫–≤—ã –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞ —Ç–∞–∫–æ–º –∂–µ –º–µ—Å—Ç–µ –≤ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–º —Å–ª–æ–≤–µ, –∞ –∫–∞–∫–∏–µ –±—É–∫–≤—ã –µ—Å—Ç—å –≤ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–º —Å–ª–æ–≤–µ, –Ω–æ –Ω–µ –Ω–∞ —Å–≤–æ—ë–º –º–µ—Å—Ç–µ.\n–ë—É–∫–≤—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞ —Å–≤–æ—ë–º –º–µ—Å—Ç–µ –∏–∑ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –±—É–¥—É—Ç –≤—ã–¥–µ–ª—è—Ç—å—Å—è –∂–∏—Ä–Ω—ã–º —Ü–≤–µ—Ç–æ–º, –∞ —Ç–∞–∫–∂–µ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞—Ç—å—Å—è, –∞ –±—É–∫–≤—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–º —Å–ª–æ–≤–µ, –Ω–æ –Ω–µ —Å–≤–æ—ë–º –º–µ—Å—Ç–µ, –±—É–¥—É—Ç –≤—ã–¥–µ–ª—è—Ç—å—Å—è –∂–∏—Ä–Ω—ã–º —Ü–≤–µ—Ç–æ–º')


async def get_stickers(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await context.bot.send_message(chat_id=update.effective_chat.id,
                                   text='–î–µ—Ä–∂–∏—Ç–µ!\nhttps://t.me/addstickers/Coshki_krytie')


async def stop(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if main_dict[update.effective_chat.id]['game']['game_in_progress']:
        await context.bot.send_message(chat_id=update.effective_chat.id,
                                       text='–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∏–≥—Ä—É.',reply_markup = main_kb)
        main_dict[update.effective_chat.id]['game']['game_in_progress'] = False
    else:
        await context.bot.send_message(chat_id=update.effective_chat.id,
                                       text='–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤–æ –≤—Ä–µ–º—è –Ω–∞—á–∞—Ç–æ–π –∏–≥—Ä—ã')


if __name__ == '__main__':
    application = ApplicationBuilder().token('7476208184:AAHa1qSmJT2qtB2i8cql54NYX44peePVjVU').build()

    start_handler = CommandHandler('start', start)
    start_game_handler = CommandHandler('start_game', start_game)
    help_handler = CommandHandler('help', help)
    stickers_handler = CommandHandler('get_stickers', get_stickers)
    stop_handler = CommandHandler('stop', stop)
    igra_handler = MessageHandler(filters.TEXT, igra)

    application.add_handler(start_game_handler)
    application.add_handler(start_handler)
    application.add_handler(help_handler)
    application.add_handler(stickers_handler)
    application.add_handler(stop_handler)
    application.add_handler(igra_handler)
    application.run_polling()
